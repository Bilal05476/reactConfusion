{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","shared/dishes.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","CommentForm","state","isModalopen","toggleModal","handleComments","setState","isModalOpen","postComment","dishId","rating","author","comment","events","Fragment","outline","isOpen","toggle","sm","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","top","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newFeedback","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newComment","addComment","actions","reset","addComments","DISHES","category","label","price","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.368fa0d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n      \r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return(\r\n                <div key= {dish.id} className=\"col-12 col-md-3 m-1\">\r\n                    <RenderMenuItem dish = {dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n\r\n            return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/aboutus\">About Us</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/contactus\">Contact Us</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Card, CardImg, CardBody, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name}></CardImg>\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap'; \r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n   \r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/aboutus\">About Us</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Contact Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    {/* <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div> */}\r\n                    <div className=\"col-12 col-sm-11\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.firstname' id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: '*',\r\n                                            minLength: ' Must be greater than 2 characters',\r\n                                            maxLength: ' Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.lastname' id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: '*',\r\n                                            minLength: ' Must be greater than 2 characters',\r\n                                            maxLength: ' Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.telnum' id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(8), maxLength: maxLength(11), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: '*',\r\n                                            minLength: ' Must be greater than 8 numbers',\r\n                                            maxLength: ' Must be 11 numbers',\r\n                                            isNumber: ' Must be a Number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: '*',\r\n                                            validEmail: ' Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"/> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );   \r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    return(\r\n        <Stagger in>\r\n            <Fade in>\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n            </Fade>\r\n        </Stagger>    \r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                 <RenderLeader leader={leader} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport {Card,CardImg,CardText,CardBody,CardTitle , Breadcrumb, BreadcrumbItem, Button, Label, Col, Row, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisModalopen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleComments = this.handleComments.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n        \r\n        toggleModal(){\r\n\t\tthis.setState({\r\n\t\t\tisModalOpen: !this.state.isModalOpen\r\n\t\t});\r\n\t}\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n\t\tthis.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n\thandleComments(events){\r\n\t\tthis.toggleModal();\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n               \r\n                        <Button outline onClick={this.toggleModal}>\r\n                            <span className='fa fa-pencil fa-lg'></span> Comments\r\n                        </Button>\r\n                    \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggleModal}>\r\n\t\t\t\t\t\tSubmit Comments\r\n\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                    {/* <Control.text model=\".rating\"\r\n                                        name=\"rating\"\r\n                                        className=\"rating\"/> */}\r\n                                <Col md={{size: 12}}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={12}>Your Name</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.text model='.yourname' id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: ' Must be greater than 2 characters',\r\n                                            maxLength: ' Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={12}>Comments</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col sm={{size: 3}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                    </LocalForm>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    // const commentList = comments.map(comment => {\r\n    //     return (\r\n    //         <Fade in>\r\n    //         <li key={comment.id}>\r\n    //             <p>{comment.comment}</p>\r\n    //             <p>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n    //         </li>\r\n    //         </Fade>\r\n    //     )\r\n    // })\r\n    if (comments !=null)\r\n    return (\r\n        <div className=\"col-12\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <Fade in>\r\n                            <li key={comment.id}>\r\n                            <p>{comment.comment}</p>\r\n                            <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    )\r\n}\r\n\r\n    function RenderDish({dish}) {\r\n        return dish !== null ? (\r\n            <FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        ) : <div></div>;\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    \telse if (props.dish != null)\r\n\r\n        \treturn (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-3 m-1\">\r\n                            <RenderDish dish = {props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3 m-1\">\r\n                            <RenderComments comments={props.comments}\r\n                            postComment = {props.postComment}\r\n                            dishId = {props.dish.id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default DishDetail;\r\n// export default CommentForm;","import React , { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nclass Header extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisNavOpen: false,\r\n\t\t\tisModalopen: false\r\n\t\t};\r\n\r\n\t\tthis.toggleNav = this.toggleNav.bind(this);\r\n\t\tthis.toggleModal = this.toggleModal.bind(this);\r\n\t\tthis.handleLogin = this.handleLogin.bind(this);\r\n\t}\r\n\r\n\ttoggleNav(){\r\n\t\tthis.setState({\r\n\t\t\tisNavOpen: !this.state.isNavOpen\r\n\t\t});\r\n\t}\r\n\r\n\ttoggleModal(){\r\n\t\tthis.setState({\r\n\t\t\tisModalOpen: !this.state.isModalOpen\r\n\t\t});\r\n\t}\r\n\r\n\thandleLogin(event){\r\n\t\tthis.toggleModal();\r\n\t\talert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n    \t\t\t<Navbar dark expand=\"md\">\r\n        \t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggleNav} />\r\n        \t\t\t\t<NavbarBrand className=\"mr-auto\" href=\"/\">\r\n\t\t\t\t\t\t\t<img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n\t\t\t\t\t\t</NavbarBrand>\r\n\r\n\t\t\t\t\t\t<Collapse isOpen={this.state.isNavOpen} navbar>\r\n\t\t\t\t\t\t<Nav navbar>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" to=\"/home\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-home fa-lg\"></span> Home\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" to=\"/aboutus\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-info fa-lg\"></span> About Us\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" to=\"/menu\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-list fa-lg\"></span> Menu\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" to=\"/contactus\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-address-card fa-lg\"></span> Contact us\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<Button outline onClick={this.toggleModal}>\r\n\t\t\t\t\t\t\t\t\t<span className='fa fa-sign-in fa-lg'></span> login\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Collapse>\r\n        \t\t\t</div>\r\n        \t\t</Navbar>\r\n        \t\t<Jumbotron>\r\n        \t\t\t<div className=\"container\">\r\n        \t\t\t\t<div className=\"row row-header\">\r\n        \t\t\t\t\t<div className=\"col-12 col-sm-6\">\r\n        \t\t\t\t\t\t<h1>Ristorante Con Fusion</h1>\r\n        \t\t\t\t\t\t<p>We take inspiration from the world best cuisions, and Create a unique fusion experience</p>\r\n        \t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n        \t\t\t</div>\r\n        \t\t</Jumbotron>\r\n\t\t\t\t<Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggleModal}>\r\n\t\t\t\t\t\tlogin\r\n\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<Form onSubmit={this.handleLogin}>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label htmlFor=\"username\">Username</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" id=\"username\" name=\"username\"\r\n\t\t\t\t\t\t\t\tinnerRef={(input) => this.username = input} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label htmlFor=\"password\">Password</Label>\r\n\t\t\t\t\t\t\t<Input type=\"password\" id=\"password\" name=\"password\"\r\n\t\t\t\t\t\t\t\tinnerRef={(input) => this.password = input}  />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup check>\r\n\t\t\t\t\t\t\t<Label check>\r\n\t\t\t\t\t\t\t\t<Input type=\"checkbox\" name=\"remember\"\r\n\t\t\t\t\t\t\t\tinnerRef={(input) => this.remember = input}  />\r\n\t\t\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<Button type=\"submit\" value=\"submit\" color=\"success\">Login</Button>\r\n                    </Form>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n\treturn(\r\n    <div className=\"footer\">\r\n\t\t<div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address className=\"address\">\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\t);\r\n}\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      telnum: telnum,\r\n      email: email,\r\n      agree: agree,\r\n      contactType: contactType,\r\n      message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw error;\r\n      })\r\n    .then(response => response.json() )\r\n    .then(response=>{alert('Thank you for your feedback!\\n'+JSON.stringify(response));})\r\n    .catch(error =>  { console.log('Post Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n  };\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } \r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n// export const fetchFeedback = () => (dispatch) => {\r\n//     dispatch(feedbackLoading(true));\r\n\r\n//     return fetch(baseUrl + 'feedback')\r\n//         .then(response => {\r\n//             if (response.ok) {\r\n//                 return response;\r\n//             } \r\n//             else {\r\n//                 var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n//                 error.response = response;\r\n//                 throw error;\r\n//             }\r\n//         },\r\n//         error => {\r\n//             var errmess = new Error(error.message);\r\n//             throw errmess;\r\n//         })\r\n//         .then(response => response.json())\r\n//         .then(feedback => dispatch(addFeedback(feedback)))\r\n//         .catch(error => dispatch(feedbackFailed(error.message)));\r\n\r\n// }\r\n\r\n// export const feedbackLoading = () => ({\r\n//     type: ActionTypes.FEEDBACK_LOADING\r\n// });\r\n// export const feedbackFailed = (errmess) => ({\r\n//     type: ActionTypes.FEEDBACK_FAILED,\r\n//     payload: errmess\r\n// });\r\n\r\n// export const addFeedback = (feedback) => ({\r\n//     type: ActionTypes.ADD_FEEDBACK,\r\n//     payload: feedback\r\n// });","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route , Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback  } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment))\r\n    , fetchDishes: () => { dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n      }\r\n\r\n    render(){\r\n\r\n        const HomePage = () => {\r\n            return(\r\n            <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leadersErrMess={this.props.leaders.errMess}\r\n        \r\n          />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({match}) =>{\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10)) [0]}\r\n                  isLoading={this.props.dishes.isLoading}\r\n                  errMess={this.props.dishes.errMess}\r\n                  comments = {this.props.comments.comments.filter((comment) => comment.id === parseInt(match.params.dishId, 10))}\r\n                  commentsErrMess={this.props.comments.errMess}\r\n                  postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n\r\n    \treturn (\r\n    \t<div>\r\n    \t\t<Header />\r\n            <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n                <Route path=\"/home\" component = {HomePage} />\r\n                <Route exact path=\"/menu\" component = {() => <Menu dishes ={this.props.dishes} />} />\r\n                <Route path=\"/menu/:dishId\" component = {DishWithId} />\r\n                <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                <Route exact path=\"/aboutus\" component= {() => <About leaders={this.props.leaders} /> }/>\r\n                <Redirect to = \"/home\" />\r\n            </Switch>\r\n            </CSSTransition>\r\n            </TransitionGroup>\r\n            <Footer />\r\n        </div>\r\n    \t);\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: '/assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        featured: true,\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'                    \r\n        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: '/assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: '/assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?'\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: '/assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        featured: false,\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\r\n        }\r\n    ];","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true, errMess: null, dishes:[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default: \r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n    }, action) => {\r\n    \r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions:[]\r\n    }, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { \r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders:[]\r\n    }, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default: \r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { DISHES } from './shared/dishes';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n\tconstructor(props) {\n    \tsuper(props)\n    \t\n    \tthis.state = {\n      \t\tdishes: DISHES\n    };\n}\n    \n    render(){\n    \treturn (\n\t\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>        \t\n\t\t\t<div>\n\t\t\t\t<Main />                \n        \t</div>\n\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n    \t);\n    }\n}\nexport default App;\n/*dishes={this.state.dishes}*/ ","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            comments: Comments,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}